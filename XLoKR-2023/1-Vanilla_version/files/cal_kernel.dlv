
% c represents complements of kernels
% k stands for kernel
% pk means possibly in or out of kernel

% Positions
pos(X) :- e(X,_).
pos(X) :- e(_,X).

% Kernel rules
c(X) :- e(X,Y), k(Y).         % X is in the kernel complement if there is an edge from X into the kernel (to Y)
k(X) :- pos(X), not c(X).
pk(X) :- pos(X), not c(X), not k(X).
